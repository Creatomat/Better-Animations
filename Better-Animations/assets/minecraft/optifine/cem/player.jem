{
	"credit": "Made with Blockbench",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 8, 8], "textureOffset": [0, 0]}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 8, 8], "textureOffset": [32, 0], "sizeAdd": 0.5}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0]
		},
		{
			"part": "jacket",
			"id": "jacket",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"submodels": [
				{
					"id": "upperbody",
					"invertAxis": "xy",
					"translate": [0, 12, 0],
					"submodels": [
						{
							"id": "head2",
							"invertAxis": "xy",
							"translate": [0, 12, 0]
						},
						{
							"id": "jacket2",
							"invertAxis": "xy",
							"translate": [0, 0, 0],
							"boxes": [
								{"coordinates": [-4, 0, -2, 8, 12, 4], "textureOffset": [16, 32], "sizeAdd": 0.25},
								{"coordinates": [-4, 0, -2, 8, 12, 4], "textureOffset": [16, 16]}
							]
						}
					]
				}
			],
			"animations": [
				{
					"var.shuffle": "clamp(cos(limb_swing*-1*0.725)*limb_speed, -1, 1)",
					"var.leg": "clamp(sin(limb_swing*0.725)*limb_speed, -1, 0)",
					"var.swing": "clamp(sin(limb_swing*0.725)*limb_speed, -1, 1)",
					"var.fakeswing": "clamp(sin(limb_swing*0.725)*limb_speed*1, -1, 1)",
					"var.random": "random(time)",
					"var.is_crouching": "if(is_sneaking == true && is_on_ground == true, 1, 0)",
					"var.is_falling": "if(true, 0, 0)"
				},
				{
					"left_leg.tz": "if(limb_speed > 0.05, if(var.is_crouching != 1, (-var.shuffle*2.25) + 2.2, (-var.shuffle*2.25) + 4.5), if(var.is_crouching != 1, 0.75, 4.5))",
					"left_leg.ty": "if(limb_speed > 0.05, if(var.is_crouching != 1, (var.leg*3.2 + 11.95) + 0, (var.leg*3.2 + 11.95) + 0.75), (11.95) + 0.2)",
					"left_leg.rz": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0) + left_leg.rz, torad(-10))",
					"left_leg.ry": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0) + left_leg.ry, torad(-10))",
					"left_leg.tx": "if(limb_speed < 0.05, 2.5, 2)",
					"left_leg.rx": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed > 0.05, sin(var.fakeswing)*limb_speed, if(is_riding == false, torad(3) + left_leg.rx, left_leg.rx)), sin(time*0.7)*0.5)",
					"left_pants.tz": "if(limb_speed > 0.05, if(var.is_crouching != 1, (-var.shuffle*2.25) + 2.2, (-var.shuffle*2.25) + 4.5), if(var.is_crouching != 1, 0.75, 4.5))",
					"left_pants.ty": "if(limb_speed > 0.05, if(var.is_crouching != 1, (var.leg*3.2 + 11.95) + 0, (var.leg*3.2 + 11.95) + 0.75), (11.95) + 0.2)",
					"left_pants.rz": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0) + left_pants.rz, torad(-10))",
					"left_pants.ry": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0) + left_pants.ry, torad(-10))",
					"left_pants.tx": "if(limb_speed < 0.05, 2.5, 2)",
					"left_pants.rx": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed > 0.05, sin(var.fakeswing)*limb_speed, if(is_riding == false, torad(3) + left_pants.rx, left_leg.rx)), sin(time*0.7)*0.5)"
				},
				{
					"right_leg.tz": "if(limb_speed > 0.05, if(var.is_crouching != 1, (var.shuffle*2.25) + 2.2, (var.shuffle*2.25) + 4.5), if(var.is_crouching != 1, -0.5, 4.5))",
					"right_leg.tx": "if(limb_speed < 0.05, -2.5, -2)",
					"right_leg.ty": "if(limb_speed > 0.05, if(var.is_crouching != 1, (-var.leg*3.2 + 11.95) + 0, (-var.leg*3.2 + 11.95) + 0.75), (11.95) + 0.2)",
					"right_leg.rz": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed < 0.05, torad(3) + right_leg.rz, right_leg.rz), torad(10))",
					"right_leg.ry": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0) + right_leg.ry, torad(10))",
					"right_leg.rx": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed > 0.05,-(sin(var.fakeswing)*limb_speed), if(is_riding == false, torad(-2) + right_leg.rx, right_leg.rx)), -(sin(time*0.7)*0.55))",
					"right_pants.tz": "if(limb_speed > 0.05, if(var.is_crouching != 1, (var.shuffle*2.25) + 2.2, (var.shuffle*2.25) + 4.5), if(var.is_crouching != 1, -0.5, 4.5))",
					"right_pants.tx": "if(limb_speed < 0.05, -2.5, -2)",
					"right_pants.ty": "if(limb_speed > 0.05, if(var.is_crouching != 1, (-var.leg*3.2 + 11.95) + 0, (-var.leg*3.2 + 11.95) + 0.75), (11.95) + 0.2)",
					"right_pants.rz": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed < 0.05, torad(3) + right_pants.rz, 0 + right_pants.rz), torad(10))",
					"right_pants.ry": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0) + right_pants.ry, torad(10))",
					"right_pants.rx": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed > 0.05,-(sin(var.fakeswing)*limb_speed), if(is_riding == false, torad(-2) + right_pants.rx, right_leg.rx)), -(sin(time*0.7)*0.55))"
				},
				{
					"right_arm.rx": "if(var.is_falling == 1, torad(180) + sin(time*0.6)*0.8, right_arm.rx)",
					"right_sleeve.rx": "if(var.is_falling == 1, torad(180) + sin(time*0.6)*0.8, right_sleeve.rx)",
					"right_arm.rz": "if(var.is_falling == 1, torad(-30), right_arm.rz)",
					"right_sleeve.rz": "if(var.is_falling == 1, torad(-30), right_sleeve.rz)",
					"right_arm.ty": "right_arm.ty + sin(limb_swing*1)*limb_speed*0.9",
					"right_sleeve.ty": "right_sleeve.ty + sin(limb_swing*1)*limb_speed*0.9"
				},
				{
					"left_arm.rx": "if(var.is_falling == 1, torad(180) + sin(-time*0.6)*0.8, left_arm.rx)",
					"left_sleeve.rx": "if(var.is_falling == 1, torad(180) + sin(-time*0.6)*0.8, left_sleeve.rx)",
					"left_arm.rz": "if(var.is_falling == 1, torad(30), left_arm.rz)",
					"left_sleeve.rz": "if(var.is_falling == 1, torad(30), left_sleeve.rz)",
					"left_arm.ty": "left_arm.ty + sin(limb_swing*1)*limb_speed*0.9",
					"left_sleeve.ty": "left_sleeve.ty + sin(limb_swing*1)*limb_speed*0.9"
				},
				{
					"upperbody.rz": "-var.swing*0.025",
					"upperbody.ry": "-var.shuffle*0.017",
					"upperbody.ty": "if(var.is_crouching == 1, -sin(time*0.075)*0.3 - 13.5, if(limb_speed > 0.05, -12.25+sin(limb_swing*1)*limb_speed*0.9, -sin(time*0.075)*0.3 - 11.95))",
					"upperbody.rx": "if(limb_speed > 0.05 || var.is_crouching == 1, if(var.is_crouching == 1, torad(0), torad(4 + (limb_speed * 10)) ), 0)",
					"upperbody.tz": "if(var.is_crouching == 1, 0, if(limb_speed > 0.05, 1 + (limb_speed * 1.25) + if(hurt_time == 10, 0, hurt_time*0.05), 0 + if(hurt_time == 10, 0, hurt_time*0.05)))",
					"body.ry": "if((is_on_ground == 1 || is_riding == true) || var.is_falling == 0, 0, sin(time*0.75)*0.1)",
					"body.rx": "if(var.is_crouching == 1, body.rx, if(limb_speed > 0.05, torad(4 + (limb_speed * 10)), 0))",
					"body.tz": "if(var.is_crouching == 1, 0, if(limb_speed > 0.05, 0 + if(hurt_time == 10, 0, hurt_time*0.05), 0 + if(hurt_time == 10, 0, hurt_time*0.05)))",
					"body.ty": "if(limb_speed > 0.05 && var.is_crouching == 0,sin(limb_swing*1)*limb_speed*0.9,body.ty)",
					"jacket2.tz": "0.2",
					"jacket.ry": "if((is_on_ground == 1 || is_riding == true) || var.is_falling == 0, 0, sin(time*0.75)*0.1)"
				},
				{
					"head.rx": "if(is_in_water == true && limb_speed > 0.5, torad(-90), if(limb_speed > 0.05 && hurt_time == 0, torad(-(3 + (limb_speed * 2) ) + (head_pitch)) + torad(-6*hurt_time) + (sin(limb_swing*1)*limb_speed*0.075), torad(head_pitch + (-6*hurt_time))))",
					"head.rz": "if(var.is_crouching == 0 && hurt_time == 10, torad(move_strafing * (-17.5)), 0)",
					"head.ry": "torad(head_yaw)",
					"head.tz": "if(var.is_crouching == 1, 0, if(limb_speed > 0.05, 0 + if(hurt_time == 10, 0, hurt_time*0.05), 0 + if(hurt_time == 10, 0, hurt_time*0.05)))",
					"head.ty": "if(limb_speed > 0.05 && var.is_crouching == 0, sin(limb_swing*1)*limb_speed*0.9, head.ty)",
					"headwear.rx": "if(is_in_water == true && limb_speed > 0.5, torad(-90), if(limb_speed > 0.05 && hurt_time == 0, torad(-(3 + (limb_speed * 2) ) + (head_pitch)) + torad(-6*hurt_time) + (sin(limb_swing*1)*limb_speed*0.075), torad(head_pitch + (-6*hurt_time))))",
					"headwear.rz": "if(var.is_crouching == 0 && hurt_time == 10, torad(move_strafing * (-17.5)), 0)",
					"headwear.ry": "torad(head_yaw)",
					"headwear.tz": "if(var.is_crouching == 1, 0, if(limb_speed > 0.05, 0 + if(hurt_time == 10, 0, hurt_time*0.05), 0 + if(hurt_time == 10, 0, hurt_time*0.05)))",
					"headwear.ty": "if(limb_speed > 0.05 && var.is_crouching == 0, sin(limb_swing*1)*limb_speed*0.9, head.ty)"
				}
			]
		},
		{
			"part": "left_arm",
			"id": "left_arm",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{"coordinates": [2, 12, -2, 4, 12, 4], "textureOffset": [32, 48]}
			]
		},
		{
			"part": "left_sleeve",
			"id": "left_sleeve",
			"invertAxis": "xy",
			"translate": [-5, -22, 0],
			"boxes": [
				{"coordinates": [2, 12, -2, 4, 12, 4], "textureOffset": [48, 48], "sizeAdd": 0.25}
			]
		},
		{
			"part": "right_arm",
			"id": "right_arm",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{"coordinates": [-6, 12, -2, 4, 12, 4], "textureOffset": [40, 16]}
			]
		},
		{
			"part": "right_sleeve",
			"id": "right_sleeve",
			"invertAxis": "xy",
			"translate": [5, -22, 0],
			"boxes": [
				{"coordinates": [-6, 12, -2, 4, 12, 4], "textureOffset": [40, 32], "sizeAdd": 0.25}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [16, 48]}
			]
		},
		{
			"part": "left_pants",
			"id": "left_pants",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 48], "sizeAdd": 0.25}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [0, 16]}
			]
		},
		{
			"part": "right_pants",
			"id": "right_pants",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [0, 32], "sizeAdd": 0.25}
			]
		}
	]
}
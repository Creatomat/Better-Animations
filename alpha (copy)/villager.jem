{
	"credit": "Made with Blockbench",
	"texture": "villager",
	"textureSize": [64, 64],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [0, 0]}
			]
		},
		{
			"part": "nose",
			"id": "nose",
			"invertAxis": "xy",
			"translate": [0, -26, 0],
			"boxes": [
				{"coordinates": [-1, 23, -6, 2, 4, 2], "textureOffset": [24, 0]}
			]
		},
		{
			"part": "headwear",
			"id": "headwear",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 24, -4, 8, 10, 8], "textureOffset": [32, 0], "sizeAdd": 0.51}
			]
		},
		{
			"part": "headwear2",
			"id": "headwear2",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"rotate": [90, 0, 0],
			"boxes": [
				{"coordinates": [-8, 16, -6, 16, 16, 1], "textureOffset": [30, 47]}
			]
		},
		{
			"part": "body",
			"id": "body",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 12, -3, 8, 12, 6], "textureOffset": [16, 20]}
			],
			"animations": [
				{
					"var.shuffle": "clamp(cos(limb_swing*-1*0.725)*limb_speed, -1, 1)",
					"var.leg": "clamp(sin(limb_swing*0.725)*limb_speed, -1, 0)",
					"var.swing": "clamp(sin(limb_swing*0.725)*limb_speed, -1, 1)",
					"var.fakeswing": "clamp(sin(limb_swing*0.725)*limb_speed*1, -1, 1)",
					"var.random": "random(time)",
					"var.is_crouching": "if(is_sneaking == true && is_on_ground == true, 1, 0)",
					"var.timer": "if(is_on_ground == 1, 0, var.timer + 1)",
					"var.is_falling": "if(var.timer > 15, 1, 0)"
				},
				{
					"left_leg.tz": "if(limb_speed > 0.05, (-var.shuffle*2.25) + 2.2, 0.75)",
					"left_leg.ty": "if(limb_speed > 0.05, (var.leg*3.2 + 11.95) + 0, (11.95) + 0.2)",
					"left_leg.rz": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0), torad(-10))",
					"left_leg.ry": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0), torad(-10))",
					"left_leg.tx": "if(limb_speed < 0.05, 2.5, 2)",
					"left_leg.rx": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed > 0.05, sin(var.fakeswing)*limb_speed, if(is_riding == false, torad(3), left_leg.rx)), sin(time*0.7)*0.5)"
				},
				{
					"right_leg.tz": "if(limb_speed > 0.05, (var.shuffle*2.25) + 2.2, -0.5)",
					"right_leg.tx": "if(limb_speed < 0.05, -2.5, -2)",
					"right_leg.ty": "if(limb_speed > 0.05, (-var.leg*3.2 + 10.95) + 0, (11.95) + 0.2)",
					"right_leg.rz": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed < 0.05, torad(3), 0), torad(10))",
					"right_leg.ry": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, torad(0), torad(10))",
					"right_leg.rx": "if(is_on_ground == 1 || is_riding == true || var.is_falling == 0, if(limb_speed > 0.05,-(sin(var.fakeswing)*limb_speed), if(is_riding == false, torad(-2), right_leg.rx)), -(sin(time*0.7)*0.55))"
				},
				{
					"body.ry": "if(swing_progress == 0, if(is_on_ground == 1 || is_riding == true, 0, sin(time*0.75)*0.1), torad(15)+torad(-swing_progress*30))",
					"body.rx": "if(var.is_crouching == 1, body.rx, if(limb_speed > 0.05, torad(4 + (limb_speed * 10)), 0))",
					"body.tz": "if(var.is_crouching == 1, 0, if(limb_speed > 0.05, 0 + if(hurt_time == 10, 0, hurt_time*0.05), 0 + if(hurt_time == 10, 0, hurt_time*0.05)))",
					"body.ty": "if(limb_speed > 0.05 && var.is_crouching == 0,sin(limb_swing*1)*limb_speed*0.6,body.ty)"
				},
				{
					"head.ty": "if(limb_speed > 0.05 && var.is_crouching == 0,sin(limb_swing*1)*limb_speed*0.6,body.ty)"
				}
			]
		},
		{
			"part": "bodywear",
			"id": "bodywear",
			"invertAxis": "xy",
			"translate": [0, -24, 0],
			"boxes": [
				{"coordinates": [-4, 4, -3, 8, 20, 6], "textureOffset": [0, 38], "sizeAdd": 0.5}
			]
		},
		{
			"part": "right_leg",
			"id": "right_leg",
			"invertAxis": "xy",
			"translate": [-2, -12, 0],
			"boxes": [
				{"coordinates": [0, 0, -2, 4, 12, 4], "textureOffset": [0, 22]}
			]
		},
		{
			"part": "left_leg",
			"id": "left_leg",
			"invertAxis": "xy",
			"translate": [2, -12, 0],
			"boxes": [
				{"coordinates": [-4, 0, -2, 4, 12, 4], "textureOffset": [0, 22]}
			]
		}
	]
}